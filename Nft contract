           import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

            contract MyToken is ERC20 {
            address private owner;
            constructor() ERC20("Darth", "DRT") {
            owner = msg.sender;
                                                  }
             modifier onlyOwner() {
              require(msg.sender == owner, "Only the contract owner can call this function.");
              _;
                                  }
               function mint(address to, uint256 amount) public onlyOwner {
              _mint(to, amount);
                    }
           function burn(uint256 amount) public {
                _burn(msg.sender, amount);
            }
            function transfer(address to, uint256 amount) public override returns (bool) {
                require(amount <= balanceOf(msg.sender), "Insufficient balance.");
                _transfer(msg.sender, to, amount);
                return true;
            }
        }

                function redeem(uint256 item) external {
                    uint amount;
                    if (item ==1){
                        amount=150;
                    }
                    else if(item ==2){
                        amount=200;
                    }
                    else {
                        amount=6-0;
                    }
                    require(amount > 0, "Invalid redeem amount");
                    _burn(msg.sender, amount);
                }
                function showStore() external pure returns (string memory) {
                    return "1. DGN K.E.Y NFT__ ( 150 DGN ) __ 2. DGN HAMMER NFT __ ( 200 DGN ) __ 3. DGN MEMBER NFT__(600 DGN)__";
                }
